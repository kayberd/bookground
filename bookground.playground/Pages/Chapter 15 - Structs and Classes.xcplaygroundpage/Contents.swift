import Foundation

// MUTATING: MAKE YOU TO CHANGE SELF'S PROPERTIES FOR ENUMS AND STRUCTS
// FINAL: CLASSES OR METHODS CAN'T BE INHERITED/OVERRIDEN

// DIFFERENCES BETWEEN STRUCT AND CLASSES
// 1 - STRUCTS ARE CANT BE INHERITED
// 2 - STRUCTS ARE VALUE TYPES LIKE INT, BOOL ETC. ACTUALLY THOSE ARE IMPLEMENTED AS STRUCTS IN SWIFT
// CLASSES ARE HOWEVER, ONLY USE A VARIABLE TO STORE A REFERENCE, STRUCTS ARE DEEP COPIED CLASSES ARE SHALLOW
// YOU NEED TO PASS MUTATING FOR STRUCTS AND ENUMS TO CHANGE SELF, BUT NOT FOR CLASSES SINCE THEY ARE REFERENCE TYPE
// NOT NEED TO PASS INOUT

// TYPE METHODS:
struct Square {
    static func numberOfSides() -> Int {return 4}
}

class Zombie {
    class func makeSpookyNoise() -> String {return "Brains ...."}
}

// The difference between static and class that subclasses can override class methods; they cannot override static methods
